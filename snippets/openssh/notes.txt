*** Configuration and logs
On Linux, configuration is stored inside /etc/ssh

Authentication logs is in /var/log/auth.log

*** Commands
sshd -T
    Validate and print out all configuration parameters

sshd -V
    Print out the version

sshd -d
    Run sshd in the foreground printing debug messages, useful for development

sshd -oConfigOption=x
    Pass configuration option to program on startup

ssh <user@ip> -c aes256-cbc -m hmac-sha1 -oKexAlgorithms=<kex>
    Connect to the server specifying what algorithms to use

*** Config options
For old server/clients that don't support newer algorithms, the newer ssh server/client need to pass in the old key algorithm in the options to make it supported.

Example: RSA with SHA1
sshd -o HostKeyAlgorithms=+ssh-rsa

Example: RSA with SHA1 and AES-CBC cipher
sshd -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o Ciphers=+aes256-cbc -d

*** Disabling password authentication
PasswordAuthentication no

sshd -o PasswordAuthentication=no -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa -o Ciphers=+aes256-cbc -d

*** Public key authentication
Alternative to password authentication, this uses asymmetric encryption like RSA/ECDSA.

Server stores public keys:
Note that this is per user authentication, you append all the public keys generated by the client into this file
$HOME/.ssh/authorized_keys

cat $HOME/.ssh/id_rsa.pub >> $HOME/.ssh/authorized_keys

The authorized_keys should be encoded in utf-8 (ascii), if it is some funky encoding it won't be able to parse properly and you get spurious error messages while denying authentication.

Client stores private key:
ssh-keygen -t rsa
$HOME/.ssh/id_rsa (private key)
$HOME/.ssh/id_rsa.pub (public key)

ssh-keygen -b 2048 -t rsa -m PEM
ssh-keygen -e -f rsa_key > id_rsa_pub.pk2
These generate RSA keys with different bit size and format (PEM and 2048 bits) and a PK2 file that is the public key that is compatible with other SSH implementations
When generating the keys, the passphrase is a password used to encrypt the private key file for security, it does mean that one has to enter the password every time to decrypt the private key when using

$HOME/.ssh/known_hosts
A list known hosts that you connected to and trust

