*** QEMU monitor commands

While running, ctrl-a-c, then inside the qemu monitor use the command:

info tlb
Dump TLB information (physical/virtual mappings)

info registers
Dump registers

info mem
Dump virtual memory translations

info mtree
Dump memory map of the machine

info pci
Show PCI tree

info irq
Show IRQ information

*** Dump the machine memory map
# Start inside qemu monitor with the machine booted up
qemu-system-arch -M <machine> -s -S -monitor stdio

# dump the memory map
info mtree

*** Kernel debugging using GDB
Launch with options:

qemu_system_xxx -kernel image -s -S

The option "-s -S" will make QEMU wait until GDB connects before continuing

We need a GDB compatible with against the system QEMU is emulating, for example, if we are debugging PowerPC,
then we need to build a GDB that supports PowerPC and use that to connect.

./configure -target=powerpc-linux --enable-sim-powerpc
./configure -target=powerpc64-linux --enable-sim-powerpc64

Then after building GDB for that platform, we can connect as follows:
$ gdb-powerpc-linux

gdb> file kernel_image_with_symbols
gdb> target remote localhost:1234
gdb> continue

