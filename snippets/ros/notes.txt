*** Install

ROS has a separate repository for some Linux distrobutions like Ubuntu for install, but usually popular distrobutions have ROS in their packages for install.

*** Directories

If ROS is system installed:

/usr/share - ROS packages are usually stored here

*** Environment variables

https://wiki.ros.org/ROS/EnvironmentVariables

ROS_ROOT       - sets the location where the ROS core packages are installed.
ROS_MASTER_URI - is a required setting that tells nodes where they can locate the master. It should be set to the XML-RPC URI of the master. Great care should be taken when using localhost, as that can lead to unintended behaviors with remotely launched nodes.

ROS_PACKAGE_PATH - common environment variable that allows you to add more ROS packages from source to your environment. 

ROS_HOME      - By default, ROS writes data to ~/.ros. This location can be changed by setting an optional ROS_HOME.
ROS_WORKSPACE - is introduced by the rosinstall / rosws tools, it is set by setup.sh that is generated by these tools when creating a workspace. It points to the folder of the workspace and is used by the rosws command as a default target of the command.

ROS_PARALLEL_JOBS - The value of this variable, if set, is passed to make when building packages. The idea is to let you exploit a multi-processor machine. For example, if you have 8 processors / cores and want to run as many parallel jobs as possible, as long as the system load is less than 8, by limiting the jobs to 8 you prevent overshoot at startup time:

*** Commands

catkin - A build system for ROS, replaces rosbuild

roscore - Runs the master server, all ROS programs need this to be running for it to work

rospack list-names - List all packages installed

rosrun <package> <program> - Runs a program inside a package, not all packages have a program though (those are library packages)

rosdep - Manage dependencies

roslaunch - Launcher to run packages

*** Package structure

package.xml - Top level information file, contains author/license/dependencies/etc
config/     - config.conf files, which set configuration parameters
launch/     - .launch files, which contains parameters for roslaunch to use
results/    - Expected output, test logs, etc 
src/        - Code
srv/        - .srv files, which are files that describe the data name/types to be subscribed/published

