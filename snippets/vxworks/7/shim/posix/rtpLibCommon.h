#ifndef _RTP_LIB_COMMON_H_
#define _RTP_LIB_COMMON_H_

typedef int RTP_ID;

#define VX_RTP_NAME_LENGTH 255

#define RTP_ID_ERROR -1

#define S_rtpLib_INVALID_FILE (M_rtpLib | 1)
#define S_rtpLib_INVALID_OPTION (M_rtpLib | 2)
#define S_rtpLib_ACCESS_DENIED (M_rtpLib | 3)
#define S_rtpLib_INVALID_RTP_ID (M_rtpLib | 4)
#define S_rtpLib_NO_SYMBOL_TABLE (M_rtpLib | 5)
#define S_rtpLib_INVALID_SEGMENT_START_ADDRESS (M_rtpLib | 6)
#define S_rtpLib_INVALID_SYMBOL_REGISTR_POLICY (M_rtpLib | 7)
#define S_rtpLib_INSTANTIATE_FAILED (M_rtpLib | 8)
#define S_rtpLib_INVALID_TASK_OPTION (M_rtpLib | 9)
#define S_rtpLib_RTP_NAME_LENGTH_EXCEEDED (M_rtpLib | 10)

enum {
	RTP_GLOBAL_SYMBOLS = 0x1,
	RTP_LOCAL_SYMBOLS = 0x2,
	RTP_ALL_SYMBOLS = RTP_GLOBAL_SYMBOLS | RTP_LOCAL_SYMBOLS,
	RTP_DEBUG = 0x10,
	RTP_BUFFER_VAL_OFF = 0x20,

	RTP_LOADED_WAIT = 0x40,
	RTP_CPU_AFFINITY_NONE = 0x80,
	RTP_ORPHAN = 0x100,
	RTP_FORK = 0x200,
	RTP_VFORK = 0x400,
};

enum {
	RTP_STATE_CREATE = 0x1,
	RTP_STATE_NORMAL = 0x2,
	RTP_STATE_DELETE = 0x4,

	RTP_STATUS_STOP = 0x100,
	RTP_STATUS_ELECTED_DELETER = 0x200,

	RTP_STATE_MASK = RTP_STATE_CREATE | RTP_STATE_NORMAL | RTP_STATE_DELETE,
	RTP_STATUS_MASK = RTP_STATUS_STOP | RTP_STATUS_ELECTED_DELETER,
};

#endif
